# Makefile for TwoPunctures

BASE=$(shell /bin/pwd)
SRCD=$(BASE)/src
OBJD=$(BASE)/obj
LIBD=$(BASE)/lib

NAME=TwoPuncturesRun
EXE=$(NAME).x
SRC=$(wildcard $(SRCD)/*.c)
OBJ=$(patsubst $(SRCD)/%.c,$(OBJD)/%.o,$(SRC))
LIB=$(LIBD)/lib$(NAME).a

REMOVE=$(OBJD)/TwoPuncturesRun.o
OBJ2=$(subst $(REMOVE),,$(OBJ))

CC=@COMPILER_COMMAND@
AR=ar

# mandatory flags
CFLAGS= -std=c99 -fPIC 
CFLAGS+=-g # chose debug or ...
CFLAGS+=-O3 # ... optim
CFLAGS+=`gsl-config --cflags`# GSL

# optional flags
##CFLAGS += -fopenmp # activate OMP (opt)

LDLFLAGS=`gsl-config --libs` @LDLFLAGS@

all: $(EXE) # $(LIB)
	@echo "All done"

$(EXE): $(OBJ)
	@echo "Building $@ ..."
	@echo $(CC) $(CFLAGS) $(LFLAGS) $(OBJ) -o $@ $(LDLFLAGS)
	@$(CC) $(CFLAGS) $(LFLAGS) $(OBJ) -o $@ $(LDLFLAGS)
	@# this doesn't need to be a shared object
	@rm $(OBJD)/TwoPuncturesRun.o > /dev/null 2>&1

$(OBJD)/%.o: $(SRCD)/%.c
	@mkdir -p $(dir $@)
	@echo "Compiling $< ... -> $@"
	@$(CC) $(CFLAGS) -c $< -o $@

install:
	@mkdir -p $(LIBD)
	@echo $(CC) -shared -o lib/libtwopunct_$(CC).so $(OBJ2)
	@$(CC) -shared -o lib/libtwopunct_$(CC).so $(OBJ2)

static:
	@mkdir -p $(LIBD)
	@echo $(AR) rcs lib/libtwopunct_$(CC).a $(OBJ2)
	@$(AR) rcs lib/libtwopunct_$(CC).a $(OBJ2)

clean:
	@echo "Cleaning ..."
	@rm -vf $(OBJ)
	@echo "... done"

new: clean $(EXE)
	@echo "All done"

clearup: clean
	@echo "Removing dirs and exe ..."
	@rm -rvf $(OBJ)
	@rm -rvf $(LIBD)
	@rm -rvf $(EXE)
	@echo "All done"

.PHONY: all clean new #help

# DO NOT DELETE
